// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terrms/",
        "contact": {
            "name": "Wishiforpeace",
            "email": "1903180340@qq.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/announcement": {
            "get": {
                "description": "用户查看已经发布过的通知",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "查看通知",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"查看成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Announcement"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"msg\":\"Error occurred while getting url queries.\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/announcement/collect": {
            "post": {
                "description": "用户将通知加入自己的收藏",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "收藏通知",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"收藏成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Collection"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"msg\":\"Fail\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/announcement/collect/cancel/:collect_id": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "取消收藏",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "collect_id",
                        "name": "collect_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"取消成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Collection"
                            }
                        }
                    },
                    "500": {
                        "description": "{Code: 20002, Message: \"Database error.\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/announcement/delete/:announcement_id": {
            "delete": {
                "description": "仅组织创建者可删除通告",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "删除通知",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "通知ID",
                        "name": "announcement_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"删除成功\"}"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "412": {
                        "description": "{\"msg\":\"身份认证失败\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/announcement/group": {
            "post": {
                "description": "仅组织创建者可新建通告分组",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "创建分组",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "新建分组",
                        "name": "group",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/model.Grouping"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"创建成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Grouping"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "412": {
                        "description": "{\"msg\":\"身份认证失败\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/announcement/publish": {
            "post": {
                "description": "仅组织创建者可发布新的通知",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "announcement"
                ],
                "summary": "发布通知",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "组织创建者发布的新通知",
                        "name": "announcement",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Announcement"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"创建成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Announcement"
                            }
                        }
                    },
                    "400": {
                        "description": "{Code: 10002, Message: \"Error occurred while binding the request body to the struct.\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "412": {
                        "description": "{\"msg\":\"身份认证错误\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "{Code: 20002, Message: \"Database error.\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "一站式登录",
                "produces": [
                    "applic/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "登录",
                "parameters": [
                    {
                        "description": "登录用户信息",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"将student_id作为token保留\"}",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "{\"error_code\":\"20001\", \"message\":\"Fail.\"} or {\"error_code\":\"00002\", \"message\":\"Lack Param Or Param Not Satisfiable.\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "401": {
                        "description": "{\"error_code\":\"10001\", \"message\":\"Password or account wrong.\"} 身份认证失败 重新登录",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "{\"error_code\":\"30001\", \"message\":\"Fail.\"} 失败",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/organization": {
            "get": {
                "description": "查看目前已存在的所有组织",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "查看组织",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"获取成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Organization"
                            }
                        }
                    },
                    "500": {
                        "description": "{\"error_code\":\"30001\", \"message\":\"Fail.\"} 失败",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/organization/create": {
            "post": {
                "description": "用户新建组织以便发布信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "新建组织",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "新建组织",
                        "name": "object",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Organization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"新建成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Organization"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"msg\":\"Fail\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/organization/follow": {
            "post": {
                "description": "用户关注一个已经被创建的组织",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "关注组织",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"新建成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FollowingOrganization"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"message\":\"关注成功\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/organization/personal/created": {
            "get": {
                "description": "查看用户创建的组织",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "查看创建",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"查询成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Organization"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/organization/personal/following": {
            "get": {
                "description": "查看用户关注的组织",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "organization"
                ],
                "summary": "查看关注",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"获取成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.FollowingOrganization"
                            }
                        }
                    }
                }
            }
        },
        "/user/changename": {
            "put": {
                "description": "接收新的User结构体来修改用户名",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "修改用户名",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "需要修改的用户信息",
                        "name": "User",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Info"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"修改成功\"}",
                        "schema": {
                            "$ref": "#/definitions/Response"
                        }
                    },
                    "400": {
                        "description": "{\"error_code\":\"20001\", \"message\":\"Fail.\"} or {\"error_code\":\"00002\", \"message\":\"Lack Param Or Param Not Satisfiable.\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    },
                    "500": {
                        "description": "{\"error_code\":\"30001\", \"message\":\"Fail.\"} 失败",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/user/colletion": {
            "get": {
                "description": "查看用户收藏的通告",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "查看用户收藏",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"获取成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Collection"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error_code\":\"20001\",\"message\":\"Fail.\"}or {\"error_code\":\"00002\",\"message\":\"Lack Param or Param Not Satisfiable.\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        },
        "/user/published": {
            "get": {
                "description": "查看用户发布过的通告",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "通告",
                "parameters": [
                    {
                        "type": "string",
                        "description": "token",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{\"msg\":\"获取成功\"}",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Announcement"
                            }
                        }
                    },
                    "400": {
                        "description": "{\"error_code\":\"20001\",\"message\":\"Fail.\"}or {\"error_code\":\"00002\",\"message\":\"Lack Param or Param Not Satisfiable.\"}",
                        "schema": {
                            "$ref": "#/definitions/errno.Errno"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {}
            }
        },
        "errno.Errno": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "model.Announcement": {
            "type": "object",
            "properties": {
                "contents": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "group_id": {
                    "type": "integer"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "integer"
                },
                "organization_name": {
                    "type": "string"
                },
                "publisher_id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Collection": {
            "type": "object",
            "required": [
                "announcement_id"
            ],
            "properties": {
                "announcement": {
                    "type": "string"
                },
                "announcement_id": {
                    "type": "integer"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "student_id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.FollowingOrganization": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "integer"
                },
                "organization_name": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Grouping": {
            "type": "object",
            "required": [
                "organization_name"
            ],
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "group_name": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "organization_id": {
                    "type": "integer"
                },
                "organization_name": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Info": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "studentID": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.Organization": {
            "type": "object",
            "required": [
                "organization_name"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "founder_id": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "intro": {
                    "type": "string"
                },
                "organization_name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "model.User": {
            "type": "object",
            "required": [
                "password",
                "student_id"
            ],
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "sha": {
                    "type": "string"
                },
                "student_id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "127.0.0.1:8181",
	BasePath:    "/api/v1",
	Schemes:     []string{"http"},
	Title:       "BlackBoard API",
	Description: "黑板API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
